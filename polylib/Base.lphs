%% Literate PolyP + LaTeX script for use with lhs2TeX -*- Mode: latex; -*-
% ------------------------------------------------------------
% Basic polytypic functions
%   980409 Patrik Jansson
%   031001 Ulf Norell
%   040615 Patrik Jansson
% ------------------------------------------------------------

> module Base(pmap,fmap2,cata,ana,hylo,para,(-*-),(-+-)) where
> import PolyPrelude

%{
%align 26

> pmap :: Regular d => (a -> b) -> d a -> d b
> pmap f   = inn . fmap2 f  (pmap f)   . out
> 
> polytypic fmap2 :: (a -> c) -> (b -> d) -> f a b -> f c d
>   = \p r -> case f of
>               g + h    ->  (fmap2 p r) -+- (fmap2 p r)
>               g * h    ->  (fmap2 p r) -*- (fmap2 p r)
>               Empty    ->  \EmptyF -> EmptyF
>               Par      ->  ParF . p . unParF
>               Rec      ->  RecF . r . unRecF
>               d @ g    ->  CompF . pmap (fmap2 p r) . unCompF
>               Const t  ->  ConstF . unConstF

%align
%}
%{
%align 12

> cata     :: Regular d => (FunctorOf d a b -> b) -> (d a -> b)
> cata i   =  i   . fmap2 id (cata i  ) . out

> ana      :: Regular d => (b -> FunctorOf d a b) -> (b -> d a)
> ana    o =  inn . fmap2 id (ana    o) . o

> hylo     :: Bifunctor f => (f a b -> b) -> (c -> f a c) -> c -> b
> hylo i o =  i   . fmap2 id (hylo i o) . o

> para     :: Regular d => (d a -> FunctorOf d a b -> b) -> d a -> b
> para i x =  i x (fmap2 id (para i) (out x))

%align
%}

